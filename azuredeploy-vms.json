{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "A unique prefix in lowercase"
            }
        },
        "username": {
            "type": "string",
            "defaultValue": "tailwind",
            "metadata": {
                "description": "The username for the VMs and for the Azure SQL DB"
            }
        },
		"password": {
			"type": "securestring",
            "metadata": {
                "description": "The password. No '@', '!' or using the username"
            }
		}
    },
    "variables": {
        "resourceGroupName": "[concat('mod20-', parameters('prefix'), '-tailwindtraders')]",
		
		"sqlVirtualMachineName": "[concat('mod20-', parameters('prefix'), '-sqlvm')]",
        "sqlVirtualMachineSize": "Standard_DS13_v2",
        "sqlPublicIpAddressName": "[concat(variables('sqlVirtualMachineName'), '-ip')]",
        "sqlNsgName": "[concat(variables('sqlVirtualMachineName'), '-nsg')]",
        "sqlNicName": "[concat(variables('sqlVirtualMachineName'), '-nic')]",
		"sqlNicIpConfigName": "[concat(variables('sqlNicName'), '-ipConfig')]",

		"mongoVirtualMachineName": "[concat('mod20-', parameters('prefix'), '-mongovm')]",
        "mongoVirtualMachineSize": "Standard_DS13_v2",
        "mongoPublicIpAddressName": "[concat(variables('mongoVirtualMachineName'), '-ip')]",
        "mongoNsgName": "[concat(variables('mongoVirtualMachineName'), '-nsg')]",
        "mongoNicName": "[concat(variables('mongoVirtualMachineName'), '-nic')]",
		"mongoNicIpConfigName": "[concat(variables('mongoNicName'), '-ipConfig')]",

		"publicIpAddressType": "Dynamic",
		"publicIpAddressSku": "Basic",

		"virtualNetworkName": "[concat('mod20-', parameters('prefix'), '-vnet')]",
		"virtualNetworkId": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
		"subnetName": "default",
		"subnetRef": "[concat(variables('virtualNetworkId'), '/subnets/', variables('subnetName'))]",

		"location": "[resourceGroup().location]"
    },
    "resources": [
		{
			"type": "Microsoft.Network/publicIpAddresses",
			"apiVersion": "2019-06-01",
			"name": "[variables('sqlPublicIpAddressName')]",
			"location": "[variables('location')]",
			"sku": {
				"name": "[variables('publicIpAddressSku')]"
			},
			"properties": {
				"publicIpAllocationMethod": "[variables('publicIpAddressType')]"
			}
		},		
		{
			"type": "Microsoft.Network/publicIpAddresses",
			"apiVersion": "2019-06-01",
			"name": "[variables('mongoPublicIpAddressName')]",
			"location": "[variables('location')]",
			"sku": {
				"name": "[variables('publicIpAddressSku')]"
			},
			"properties": {
				"publicIpAllocationMethod": "[variables('publicIpAddressType')]"
			}
		},
		{
			"name": "[variables('mongoNsgName')]",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2018-08-01",
			"location": "[variables('location')]",
			"properties": {
				"securityRules": [
					{
						"name": "open-ssh",
						"properties": {
							"priority": 1000,
							"protocol": "Tcp",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationPortRange": "22",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "open-3300",
						"properties": {
							"priority": 900,
							"protocol": "*",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationPortRange": "3300",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "open-27017",
						"properties": {
							"priority": 1010,
							"protocol": "*",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationPortRange": "27017",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					}
				],
				"defaultSecurityRules": [
					{
						"name": "AllowVnetInBound",
						"etag": "W/\"5c344365-fce8-411f-98c7-05d02bfd9c3d\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Allow inbound traffic from all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
							"direction": "Inbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "AllowAzureLoadBalancerInBound",
						"etag": "W/\"5c344365-fce8-411f-98c7-05d02bfd9c3d\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Allow inbound traffic from azure load balancer",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "AzureLoadBalancer",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 65001,
							"direction": "Inbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "DenyAllInBound",
						"etag": "W/\"5c344365-fce8-411f-98c7-05d02bfd9c3d\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Deny all inbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Inbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "AllowVnetOutBound",
						"etag": "W/\"5c344365-fce8-411f-98c7-05d02bfd9c3d\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Allow outbound traffic from all VMs to all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
							"direction": "Outbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "AllowInternetOutBound",
						"etag": "W/\"5c344365-fce8-411f-98c7-05d02bfd9c3d\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Allow outbound traffic from all VMs to Internet",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "Internet",
							"access": "Allow",
							"priority": 65001,
							"direction": "Outbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "DenyAllOutBound",
						"etag": "W/\"5c344365-fce8-411f-98c7-05d02bfd9c3d\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Deny all outbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Outbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					}
				]
			}
		},
		{
			"name": "[variables('sqlNsgName')]",
			"type": "Microsoft.Network/networkSecurityGroups",
			"apiVersion": "2019-06-01",
			"location": "[variables('location')]",
			"properties": {
				"securityRules": [
					{
						"name": "open-rdp",
						"properties": {
							"priority": 300,
							"protocol": "Tcp",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationPortRange": "3389",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "open-sql",
						"properties": {
							"priority": 1600,
							"protocol": "Tcp",
							"access": "Allow",
							"direction": "Inbound",
							"sourcePortRange": "*",
							"destinationPortRange": "1433",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					}
				],
				"defaultSecurityRules": [
					{
						"name": "AllowVnetInBound",
						"etag": "W/\"e044fc40-808d-4b7b-976c-9e4828e879c0\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Allow inbound traffic from all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
							"direction": "Inbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "AllowAzureLoadBalancerInBound",
						"etag": "W/\"e044fc40-808d-4b7b-976c-9e4828e879c0\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Allow inbound traffic from azure load balancer",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "AzureLoadBalancer",
							"destinationAddressPrefix": "*",
							"access": "Allow",
							"priority": 65001,
							"direction": "Inbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "DenyAllInBound",
						"etag": "W/\"e044fc40-808d-4b7b-976c-9e4828e879c0\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Deny all inbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Inbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "AllowVnetOutBound",
						"etag": "W/\"e044fc40-808d-4b7b-976c-9e4828e879c0\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Allow outbound traffic from all VMs to all VMs in VNET",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "VirtualNetwork",
							"destinationAddressPrefix": "VirtualNetwork",
							"access": "Allow",
							"priority": 65000,
							"direction": "Outbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "AllowInternetOutBound",
						"etag": "W/\"e044fc40-808d-4b7b-976c-9e4828e879c0\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Allow outbound traffic from all VMs to Internet",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "Internet",
							"access": "Allow",
							"priority": 65001,
							"direction": "Outbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					},
					{
						"name": "DenyAllOutBound",
						"etag": "W/\"e044fc40-808d-4b7b-976c-9e4828e879c0\"",
						"properties": {
							"provisioningState": "Succeeded",
							"description": "Deny all outbound traffic",
							"protocol": "*",
							"sourcePortRange": "*",
							"destinationPortRange": "*",
							"sourceAddressPrefix": "*",
							"destinationAddressPrefix": "*",
							"access": "Deny",
							"priority": 65500,
							"direction": "Outbound",
							"sourcePortRanges": [],
							"destinationPortRanges": [],
							"sourceAddressPrefixes": [],
							"destinationAddressPrefixes": []
						}
					}
				]
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks",
			"apiVersion": "2019-06-01",
			"name": "[variables('virtualNetworkName')]",
			"location": "[variables('location')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"172.16.0.0/24"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "172.16.0.0/24",
							"delegations": [],
							"privateEndpointNetworkPolicies": "Enabled",
							"privateLinkServiceNetworkPolicies": "Enabled"
						}
					}
				],
				"virtualNetworkPeerings": [],
				"enableDdosProtection": false,
				"enableVmProtection": false
			}
		},
		{
			"type": "Microsoft.Network/virtualNetworks/subnets",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('virtualNetworkName'), '/', variables('subnetName'))]",
			"dependsOn": [
				"[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
			],
			"properties": {
				"addressPrefix": "172.16.0.0/24",
				"delegations": [],
				"privateEndpointNetworkPolicies": "Enabled",
				"privateLinkServiceNetworkPolicies": "Enabled"
			}
		},
		{
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-06-01",
            "name": "[variables('mongoNicName')]",
			"location": "[variables('location')]",
            "dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
				"[concat('Microsoft.Network/publicIpAddresses/', variables('mongoPublicIpAddressName'))]"
            ],			
			"properties": {
				"ipConfigurations": [
					{
						"name": "[variables('mongoNicIpConfigName')]",
						"properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('mongoPublicIpAddressName'))]"
                            }
						}
					}
				]
			}
		},
		{
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-06-01",
            "name": "[variables('sqlNicName')]",
			"location": "[variables('location')]",
            "dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
				"[concat('Microsoft.Network/publicIpAddresses/', variables('sqlPublicIpAddressName'))]"
            ],			
			"properties": {
				"ipConfigurations": [
					{
						"name": "[variables('sqlNicIpConfigName')]",
						"properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
							"privateIPAllocationMethod": "Dynamic",
							"publicIPAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('sqlPublicIpAddressName'))]"
                            }
						}
					}
				]
			}
		},
		{
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('mongoVirtualMachineName')]",
			"location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('mongoNicName'))]"
            ],
			"properties": {
				"osProfile": {
					"computerName": "[variables('mongoVirtualMachineName')]",
					"adminUsername": "[parameters('username')]",
					"adminPassword": "[parameters('password')]",
					"linuxConfiguration": {
						"disablePasswordAuthentication": false
					}
				},
                "hardwareProfile": {
                    "vmSize": "Standard_DS1_v2"
                },
				"storageProfile": {
					"imageReference": {
						"publisher": "Canonical",
						"offer": "UbuntuServer",
						"sku": "18.04-LTS",
						"version": "latest"
					},
					"osDisk": {
						"createOption": "fromImage",
						"managedDisk": {
							"storageAccountType": "Premium_LRS"
						}
					}
				},
				"networkProfile": {
					"networkInterfaces": [{
						"id": "[resourceId('Microsoft.Network/networkInterfaces', variables('mongoNicName'))]"
					}]
				}
			},
			"resources": [{
				"apiVersion": "2019-03-01",
				"type": "extensions",
				"name": "install-mongo",
				"location": "[variables('location')]",
				"dependsOn": [
					"[concat('Microsoft.Compute/virtualMachines/', variables('mongoVirtualMachineName'))]"
				],
				"properties": {
					"publisher": "Microsoft.Azure.Extensions",
					"type": "CustomScript",
					"typeHandlerVersion": "2.0",
					"autoUpgradeMinorVersion": true,
					"settings": {
						"fileUris": [
							"https://raw.githubusercontent.com/lbugnion/tempo-mod20-templates/master/configure-mongo.sh"
						]
					},
					"protectedSettings": {
						"commandToExecute": "[concat('sudo sh configure-mongo.sh ', parameters('username'), ' ', parameters('password'))]"
					}
				}
			}]
		}
	],
    "outputs": {
        "username": {
            "type": "string",
            "value": "[parameters('username')]"
        }
    }
}